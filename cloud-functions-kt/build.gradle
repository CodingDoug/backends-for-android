buildscript {
    ext {
        kotlin_version = '1.4.30'
        kotlinx_serialization_version = '1.0.1'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'

group 'com.hyperaware.bfa.cloudfunctions'
version '1.0-SNAPSHOT'

repositories {
    jcenter()
}

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

configurations {
    invoker
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinx_serialization_version"
    implementation "com.google.cloud.functions:functions-framework-api:1.0.4"

    invoker "com.google.cloud.functions.invoker:java-function-invoker:1.0.2"
}

tasks.register("runFunction", JavaExec) {
    main = 'com.google.cloud.functions.invoker.runner.Invoker'
    classpath(configurations.invoker)
    inputs.files(configurations.runtimeClasspath, sourceSets.main.output)
    args = [
        '--classpath', files(configurations.runtimeClasspath, sourceSets.main.output).asPath,
        '--target', project.findProperty('runFunction.target') ?: "com.hyperaware.bfa.cloudfunctions.HelloWorld",
        '--port', project.findProperty('runFunction.port') ?: "8080"
    ]
}

archivesBaseName = 'app'
